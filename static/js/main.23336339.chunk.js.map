{"version":3,"sources":["data/dishes.js","components/Step1.js","components/Step2.js","components/Step3.js","components/Review.js","components/OrderForm.js","App.js","serviceWorker.js","index.js"],"names":["data","Step1Form","displayItems","items","map","item","MenuItem","key","value","this","props","orderInfor","meal","numberOfPeople","Fragment","Grid","container","spacing","xs","sm","FormControl","style","margin","className","InputLabel","Select","name","required","defaultValue","onChange","event","handleChange","type","inputProps","min","max","React","Component","Step2Form","getRestaurantsByMeal","mealSelected","restaurantsTemp","dishes","availableMeals","indexOf","push","restaurant","restaurants","Step3Form","state","dish","count","getDish","restaurantSelected","setState","target","console","log","addDishes","some","splice","listDishes","position","Button","marginTop","marginLeft","bottom","left","variant","color","onClick","Table","TableHead","TableRow","TableCell","width","TableBody","row","component","scope","ReviewForm","displayDishes","whiteSpace","OrderForm","steps","activeStep","getStepContent","step","Step1","Step2","Step3","Review","Error","error","handleNext","checkData","alert","handleBack","newStep","result","newdishes","CssBaseline","AppBar","Toolbar","Typography","noWrap","Paper","align","Stepper","label","Step","StepLabel","length","gutterBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.23336339.chunk.js","sourcesContent":["export const data = {\n  \"dishes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Chicken Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Ham Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Cheese Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Fries\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Egg Muffin\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Burrito\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Tacos\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Quesadilla\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 9,\n      \"name\": \"Steak\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 10,\n      \"name\": \"Yakitori\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Nankotsu\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Piman\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Vegan Bento\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\"]\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Coleslaw Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Grilled Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Veg. Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 17,\n      \"name\": \"Fruit Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Corn Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 19,\n      \"name\": \"Tomato Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 20,\n      \"name\": \"Minestrone Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 21,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 23,\n      \"name\": \"Hawaiian Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 24,\n      \"name\": \"Seafood Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 25,\n      \"name\": \"Deep Dish Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 26,\n      \"name\": \"Chow Mein\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Mapo Tofu\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 28,\n      \"name\": \"Kung Pao\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Wontons\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 30,\n      \"name\": \"Garlic Bread\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 31,\n      \"name\": \"Ravioli\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 32,\n      \"name\": \"Rigatoni Spaghetti\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 33,\n      \"name\": \"Fettucine Pasta\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    }\n  ]\n}\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import NumberInput from 'material-ui-number-input';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {data} from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport {InputLabel} from '@material-ui/core';\r\n\r\n\r\nclass Step1Form extends React.Component {\r\n\r\n    displayItems = items => (\r\n         items.map( item => (\r\n            <MenuItem\r\n                key={item}\r\n                value={item}\r\n            >{item}</MenuItem>\r\n        ))\r\n    )\r\n    \r\n    render() {\r\n        const meals = [\"breakfast\", \"lunch\", \"dinner\"];\r\n        const peoples = [1,2,3,4,5,6,7,8,9,10];\r\n        const {meal, numberOfPeople} = this.props.orderInfor;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                        <InputLabel><span >Please Select A Meal</span></InputLabel>\r\n                        <Select\r\n                            name=\"meal\"\r\n                            required\r\n                            defaultValue ={meal ? meal: \"\"}\r\n                            onChange={(event) => this.props.handleChange(event)}\r\n                        >\r\n                            {this.displayItems(meals)}\r\n                         </Select>\r\n                        </FormControl>\r\n                        <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                        <InputLabel><span >Please Select A Number Of People</span></InputLabel>\r\n                        <Select\r\n                            name=\"numberOfPeople\"\r\n                            type=\"number\"\r\n                            defaultValue ={numberOfPeople ? numberOfPeople: \"\"}\r\n                            onChange={(event) => this.props.handleChange(event)}\r\n                            inputProps={{ min: 1, max: 10}}\r\n                        >\r\n                        {this.displayItems(peoples)}\r\n                         </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Step1Form;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {data} from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport {InputLabel} from '@material-ui/core';\r\n\r\n\r\nclass Step2Form extends React.Component {\r\n\r\n    displayItems = items => (\r\n         items.map( item => (\r\n            <MenuItem\r\n                key={item}\r\n                value={item}\r\n            >{item}</MenuItem>\r\n        ))\r\n    )\r\n\r\n    getRestaurantsByMeal = () => {\r\n        var  mealSelected = this.props.orderInfor.meal;\r\n        var restaurantsTemp = [];\r\n        data.dishes.map((value) => {\r\n          var index1 = value.availableMeals.indexOf(mealSelected);\r\n          if (index1 !== -1) {\r\n            restaurantsTemp.push(value.restaurant);\r\n          }\r\n        });\r\n        var restaurant = [];\r\n        restaurantsTemp.map((value) => {\r\n          var index2 = restaurant.indexOf(value);\r\n          if (index2 === -1) {\r\n            restaurant.push(value);\r\n          }\r\n        });\r\n        return restaurant;\r\n      };\r\n\r\n    render() {\r\n        const restaurants = this.getRestaurantsByMeal();\r\n        const {restaurant, numberOfPeople} = this.props.orderInfor;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                        <InputLabel><span >Please Select A Restaurant</span></InputLabel>\r\n                        <Select\r\n                            name=\"restaurant\"\r\n                            defaultValue ={restaurant ? restaurant: \"\"}\r\n                            onChange={(event) => this.props.handleChange(event)}\r\n                        >\r\n                            {this.displayItems(restaurants)}\r\n                         </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Step2Form;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import NumberInput from 'material-ui-number-input';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {data} from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport {InputLabel} from '@material-ui/core';\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableCell,\r\n    TableRow,\r\n  } from \"@material-ui/core\";\r\n\r\n\r\nclass Step3Form extends React.Component {\r\n    state= {\r\n        dish: '',\r\n        count: 1,\r\n        dishes: []\r\n    }\r\n    displayItems = items => (\r\n         items.map( item => (\r\n            <MenuItem\r\n                key={item}\r\n                value={item}\r\n            >{item}</MenuItem>\r\n        ))\r\n    )\r\n    getDish = () => {\r\n        var mealSelected = this.props.orderInfor.meal;\r\n        var restaurantSelected = this.props.orderInfor.restaurant;\r\n        var restaurantsTemp = [];\r\n        data.dishes.map((value) => {\r\n          if (value.restaurant === restaurantSelected) restaurantsTemp.push(value);\r\n        });\r\n        var dish = [];\r\n        restaurantsTemp.map((value) => {\r\n          var index = value.availableMeals.indexOf(mealSelected);\r\n          if (index !== -1) {\r\n            dish.push(value.name);\r\n          }\r\n        });\r\n        return dish;\r\n      };\r\n\r\n    handleChange = (event, type) => {\r\n        if (type === \"dish\") {\r\n            this.setState(\r\n                {\r\n                dish: event.target.value,\r\n                },\r\n                function() {\r\n                    console.log(this.state)\r\n                }\r\n            );\r\n            }\r\n            if (type === \"count\") {\r\n            this.setState(\r\n                {\r\n                count: event.target.value,\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    addDishes = () => {\r\n        var {dishes, dish, count} = this.state;\r\n        if(dishes == null) {\r\n            dishes = []\r\n        }\r\n            if (dish && count ) {\r\n                const found = dishes.some(item => item.dish === dish);\r\n                if (!found) {\r\n                    dishes.push({ dish, count });\r\n                }\r\n                else {\r\n                    dishes.splice(dishes.indexOf(dish),1);\r\n                    dishes.push({ dish, count });\r\n                }\r\n            this.setState({ dishes: dishes });\r\n            this.props.addDishes(dishes);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { numberOfPeople} = this.props.orderInfor;\r\n        const {dish, count, dishes} = this.state;\r\n        const listDishes = this.getDish();\r\n        const numberSelects = [1,2,3,4,5,6,7,8,9,10];\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3} style={{ position: \"relative\"}}>\r\n                    <Grid item  xs={12} sm={6}>\r\n                    <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                        <InputLabel><span >Please Select A Dish</span></InputLabel>\r\n                        <Select\r\n                            name=\"dish\"\r\n                            onChange={(event) => this.handleChange(event,\"dish\")}\r\n                        >\r\n                            {this.displayItems(listDishes)}\r\n                         </Select>\r\n                        </FormControl>\r\n                        <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                            <InputLabel><span >Please Enter No. Of Servings</span></InputLabel>\r\n                            <Select\r\n                                name=\"count\"\r\n                                defaultValue ={1}\r\n                                onChange={(event) => this.handleChange(event,\"count\")}\r\n                            >\r\n                                {this.displayItems(numberSelects)}\r\n                            </Select>\r\n                            </FormControl>\r\n                        \r\n\r\n                         <Button\r\n                            style={{ marginTop: \"0px\", marginLeft: \"0px\" ,position: \"absolute\", bottom: \"-10px\", left: \"2rem\"}}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.addDishes}\r\n                        > Add \r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item  sm={6} xs={12}>\r\n                        <Table\r\n                            className=\"crud-table\"\r\n                            style={{margin: \"12px\"}}\r\n                        >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                <TableCell style={{ width: \"50%\" }}>Dishes </TableCell>\r\n                                <TableCell style={{ width: \"50%\" }}>Number Of Servings</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {dishes.map((row) => (\r\n                                <TableRow key={row.dish}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.dish}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.count}</TableCell>\r\n                                </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n          </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Step3Form;","import React from 'react';\r\nimport {Table,TableHead,TableRow,TableCell,TableBody,Button} from '@material-ui/core';\r\nclass ReviewForm extends React.Component {\r\n    displayDishes = dishes =>(\r\n        dishes.map((dish,key)=> (\r\n            <TableRow key={key}>\r\n                <TableCell>{dish.dish}</TableCell>\r\n                <TableCell>{dish.count}</TableCell>\r\n            </TableRow>\r\n       ))\r\n   )\r\n    \r\n    \r\n   \r\n    render(){\r\n        const {orderInfor} = this.props;\r\n        return(\r\n            <div style={{marginLeft:\"300px\"}}>\r\n                <p>Meal : {orderInfor.meal}</p>\r\n                <p>Number of People : {orderInfor.numberOfPeople}</p>\r\n                <p>Restaurant : {orderInfor.restaurant}</p>\r\n                <p>Dishes : </p>\r\n                <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width:\"300px\", marginLeft:\"100px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Dish</TableCell>\r\n                            <TableCell>Number</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.displayDishes(orderInfor.dishes)}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ReviewForm;","  \r\nimport React from 'react';\r\nimport './../App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {data} from \"../data/dishes\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Step1Form from './Step1';\r\nimport Step2Form from './Step2';\r\nimport Step3Form from './Step3';\r\nimport ReviewForm from './Review';\r\n\r\n\r\nclass OrderForm  extends React.Component {\r\n    state = {\r\n        steps: ['Step 1', 'Step 2', 'Step 3', 'Review'],\r\n        activeStep: 0,\r\n        orderInfor: {\r\n            meal: '',\r\n            numberOfPeople: 0,\r\n            restaurant: '',\r\n            dishes: []\r\n        }\r\n    }\r\n\r\n    getStepContent = step => {\r\n        switch (step) {\r\n            case 0:\r\n                return <Step1Form orderInfor={this.state.orderInfor} handleChange={this.handleChange}/>;\r\n            case 1:\r\n                return <Step2Form orderInfor={this.state.orderInfor}  handleChange={this.handleChange}/>;\r\n            case 2:\r\n                return <Step3Form orderInfor={this.state.orderInfor} addDishes={this.addDishes}/>;\r\n            case 3:\r\n                return <ReviewForm orderInfor={this.state.orderInfor} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        console.log(event.target.value);\r\n        var {orderInfor} = this.state;\r\n        var error = \"\";\r\n        if(event.target.name === \"meal\"){\r\n            orderInfor.meal = event.target.value;\r\n        }\r\n        if(event.target.name === \"numberOfPeople\"){\r\n            orderInfor.numberOfPeople = event.target.value;\r\n            // if(orderInfor.numberOfPeople < 1 ){\r\n            //     error = \"Number of People is invalid!\";\r\n            // }\r\n            // if(orderInfor.numberOfPeople > 10 ){\r\n            //     error = \"Number of People must less than 11!\";\r\n                \r\n            // }\r\n\r\n        }\r\n        if(event.target.name === \"restaurant\"){\r\n            orderInfor.restaurant = event.target.value;\r\n\r\n        }\r\n        this.setState({\r\n            orderInfor: orderInfor,\r\n            error: error\r\n        },function(){\r\n            console.log(this.state.orderInfor)\r\n        })\r\n    }\r\n\r\n    handleNext = () => {\r\n        \r\n        if(this.state.activeStep  < 4 ){\r\n            if(this.checkData() === 1){\r\n                var activeStep = this.state.activeStep + 1\r\n                this.setState({\r\n                  activeStep: activeStep\r\n                })\r\n              }\r\n              else if(this.checkData() === 0){\r\n                alert('Fill all the field!');\r\n              }\r\n              else if(this.checkData() === 2){\r\n                alert('Not enough dishes!');\r\n              }\r\n        }\r\n    };\r\n\r\n    handleBack = () => {\r\n        if(this.state.activeStep  >= 1 ){\r\n            const newStep = this.state.activeStep -1;\r\n            this.setState({activeStep:  newStep});\r\n        }\r\n    };\r\n\r\n    checkData = () =>{\r\n        var {activeStep} = this.state;\r\n        var {numberOfPeople,meal,restaurant,dishes} = this.state.orderInfor;\r\n        var result = 1;\r\n        if(activeStep === 0){\r\n          if(!numberOfPeople || ! meal){\r\n            result = 0;\r\n          }\r\n          else{\r\n            result = 1;\r\n          }\r\n        }\r\n        else if(activeStep === 1){\r\n          if(!restaurant){\r\n            result = 0;\r\n          }\r\n          else{\r\n            result = 1;\r\n          }\r\n        }\r\n        else if(activeStep === 2){\r\n          if(!dishes){\r\n            result = 0;\r\n          }\r\n          else{\r\n            var value = null\r\n            dishes.map(dish =>{\r\n              value = value + dish.count\r\n            })\r\n            if(value < numberOfPeople){\r\n              result = 2\r\n            }\r\n            else{\r\n              result = 1;\r\n            }\r\n          }\r\n        }\r\n        return result;\r\n      }\r\n    addDishes = (newdishes) => {\r\n        var {orderInfor} = this.state;\r\n        orderInfor.dishes = newdishes;\r\n        this.setState({ orderInfor: orderInfor },\r\n            function(){\r\n                console.log(this.state.orderInfor)\r\n        })\r\n    }\r\n  \r\n    \r\n    render() {\r\n        const {activeStep, steps} = this.state;\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"default\" className=\"appBar\">\r\n                <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    Fabi Test\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className=\"layout\">\r\n                <Paper className=\"paper\">\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Order\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} className=\"stepper\">\r\n                    {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <React.Fragment>\r\n                    {activeStep === steps.length ? (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                        Thank you for your order.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                        Your order number is #2001539. We have emailed your order confirmation, and will\r\n                        send you an update when your order has shipped.\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                    ) : (\r\n                    <React.Fragment>\r\n                        {this.getStepContent(activeStep)}\r\n                        <div className=\"buttons\" >\r\n                        {activeStep !== 0 && (\r\n                            <Button onClick={this.handleBack} className=\"button\">\r\n                            Back\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                           \r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleNext}\r\n                            className=\"button\"\r\n                        >\r\n                            {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                        </Button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                    )}\r\n                </React.Fragment>\r\n                </Paper>\r\n            </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderForm;","import React from 'react';\nimport OrderForm from \"./components/OrderForm\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <OrderForm />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}