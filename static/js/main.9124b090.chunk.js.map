{"version":3,"sources":["data/dishes.js","components/Step1.js","components/Step2.js","components/Step3.js","components/Review.js","components/OrderForm.js","App.js","serviceWorker.js","index.js"],"names":["data","Step1Form","props","displayItems","items","map","item","MenuItem","key","value","orderInfor","meal","numberOfPeople","Fragment","Grid","container","spacing","xs","sm","FormControl","style","margin","className","InputLabel","Select","name","required","defaultValue","onChange","event","handleChange","type","inputProps","min","max","Step2Form","restaurants","mealSelected","restaurantsTemp","dishes","availableMeals","indexOf","push","restaurant","getRestaurantsByMeal","Step3Form","useState","dish","setDish","count","setCount","target","listDishes","restaurantSelected","newDish","getDish","position","Button","marginTop","marginLeft","bottom","left","variant","color","onClick","some","splice","addDishes","Table","TableHead","TableRow","TableCell","width","TableBody","row","component","scope","ReviewForm","whiteSpace","OrderForm","steps","activeStep","setActiveStep","setMeal","setNumberOfPeople","setRestaurant","setDishes","setError","console","log","checkData","result","newdishes","CssBaseline","AppBar","Toolbar","Typography","noWrap","Paper","align","Stepper","label","Step","StepLabel","length","gutterBottom","step","Step1","Step2","Step3","Review","Error","getStepContent","alert","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9124b090.chunk.js","sourcesContent":["export const data = {\n  \"dishes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Chicken Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Ham Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Cheese Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Fries\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Egg Muffin\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Burrito\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Tacos\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Quesadilla\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 9,\n      \"name\": \"Steak\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 10,\n      \"name\": \"Yakitori\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Nankotsu\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Piman\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Vegan Bento\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\"]\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Coleslaw Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Grilled Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Veg. Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 17,\n      \"name\": \"Fruit Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Corn Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 19,\n      \"name\": \"Tomato Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 20,\n      \"name\": \"Minestrone Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 21,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 23,\n      \"name\": \"Hawaiian Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 24,\n      \"name\": \"Seafood Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 25,\n      \"name\": \"Deep Dish Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 26,\n      \"name\": \"Chow Mein\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Mapo Tofu\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 28,\n      \"name\": \"Kung Pao\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Wontons\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 30,\n      \"name\": \"Garlic Bread\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 31,\n      \"name\": \"Ravioli\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 32,\n      \"name\": \"Rigatoni Spaghetti\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 33,\n      \"name\": \"Fettucine Pasta\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    }\n  ]\n}\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import NumberInput from 'material-ui-number-input';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {data} from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport {InputLabel} from '@material-ui/core';\r\n\r\n\r\nfunction Step1Form(props) {\r\n\r\n    function displayItems(items) {\r\n        return (\r\n             items.map( item => (\r\n                <MenuItem\r\n                    key={item}\r\n                    value={item}\r\n                >{item}</MenuItem>\r\n            ))\r\n        )\r\n    }\r\n    \r\n        const meals = [\"breakfast\", \"lunch\", \"dinner\"];\r\n        const peoples = [1,2,3,4,5,6,7,8,9,10];\r\n        const {meal, numberOfPeople} = props.orderInfor;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                        <InputLabel><span >Please Select A Meal</span></InputLabel>\r\n                        <Select\r\n                            name=\"meal\"\r\n                            required\r\n                            defaultValue ={meal ? meal: \"\"}\r\n                            onChange={(event) => props.handleChange(event)}\r\n                        >\r\n                            {displayItems(meals)}\r\n                         </Select>\r\n                        </FormControl>\r\n                        <FormControl style={{margin: \"20px\"}} className=\"form-controll\"> \r\n                        <InputLabel><span >Please Select A Number Of People</span></InputLabel>\r\n                        <Select\r\n                            name=\"numberOfPeople\"\r\n                            type=\"number\"\r\n                            defaultValue ={numberOfPeople ? numberOfPeople: \"\"}\r\n                            onChange={(event) => props.handleChange(event)}\r\n                            inputProps={{ min: 1, max: 10}}\r\n                        >\r\n                        {displayItems(peoples)}\r\n                         </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n}\r\nexport default Step1Form;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { data } from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputLabel } from '@material-ui/core';\r\n\r\n\r\nfunction Step2Form(props) {\r\n\r\n  function displayItems(items) {\r\n    return (\r\n      items.map(item => (\r\n        <MenuItem\r\n          key={item}\r\n          value={item}\r\n        >{item}</MenuItem>\r\n      )))\r\n  }\r\n\r\n\r\n  function getRestaurantsByMeal() {\r\n    var mealSelected = props.orderInfor.meal;\r\n    var restaurantsTemp = [];\r\n    data.dishes.map((value) => {\r\n      var index1 = value.availableMeals.indexOf(mealSelected);\r\n      if (index1 !== -1) {\r\n        restaurantsTemp.push(value.restaurant);\r\n      }\r\n    });\r\n    var restaurant = [];\r\n    restaurantsTemp.map((value) => {\r\n      var index2 = restaurant.indexOf(value);\r\n      if (index2 === -1) {\r\n        restaurant.push(value);\r\n      }\r\n    });\r\n    return restaurant;\r\n  };\r\n  const restaurants = getRestaurantsByMeal();\r\n  const { restaurant, numberOfPeople } = props.orderInfor;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n            <InputLabel><span >Please Select A Restaurant</span></InputLabel>\r\n            <Select\r\n              name=\"restaurant\"\r\n              defaultValue={restaurant ? restaurant : \"\"}\r\n              onChange={(event) => props.handleChange(event)}\r\n            >\r\n              {displayItems(restaurants)}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Step2Form;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import NumberInput from 'material-ui-number-input';\r\nimport { FormControl } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { data } from \"../data/dishes\";\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableCell,\r\n    TableRow,\r\n} from \"@material-ui/core\";\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction Step3Form(props) {\r\n    // state= {\r\n    //     dish: '',\r\n    //     count: 1,\r\n    //     dishes: []\r\n    // }\r\n    const [dish, setDish] = useState('');\r\n    const [count, setCount] = useState(1);\r\n    const [dishes, setDishes] = useState([]);\r\n\r\n\r\n    function displayItems(items) {\r\n        return (\r\n\r\n            items.map(item => (\r\n                <MenuItem\r\n                    key={item}\r\n                    value={item}\r\n                >{item}</MenuItem>\r\n            ))\r\n        )\r\n    }\r\n\r\n    function getDish() {\r\n        var mealSelected = props.orderInfor.meal;\r\n        var restaurantSelected = props.orderInfor.restaurant;\r\n        var restaurantsTemp = [];\r\n        data.dishes.map((value) => {\r\n            if (value.restaurant === restaurantSelected) restaurantsTemp.push(value);\r\n        });\r\n        var newDish = [];\r\n        restaurantsTemp.map((value) => {\r\n            var index = value.availableMeals.indexOf(mealSelected);\r\n            if (index !== -1) {\r\n                newDish.push(value.name);\r\n            }\r\n        });\r\n        return newDish;\r\n    };\r\n\r\n    function handleChange(event, type) {\r\n        if (type === \"dish\") {\r\n            // this.setState(\r\n            //     {\r\n            //         dish: event.target.value,\r\n            //     },\r\n            //     function () {\r\n            //         console.log(this.state)\r\n            //     }\r\n            // );\r\n            setDish(event.target.value);\r\n        }\r\n        if (type === \"count\") {\r\n            // this.setState(\r\n            //     {\r\n            //         count: event.target.value,\r\n            //     }\r\n            // );\r\n            setCount(event.target.value);\r\n        }\r\n    }\r\n\r\n    function addDishes() {\r\n        // var { dishes, dish, count } = this.state;\r\n        if (dishes == null) {\r\n            dishes = []\r\n        }\r\n        if (dish && count) {\r\n            const found = dishes.some(item => item.dish === dish);\r\n            if (!found) {\r\n                dishes.push({ dish, count });\r\n            }\r\n            else {\r\n                dishes.splice(dishes.indexOf(dish), 1);\r\n                dishes.push({ dish, count });\r\n            }\r\n            // setState({ dishes: dishes });\r\n            setDish(dishes)\r\n            props.addDishes(dishes);\r\n        }\r\n    }\r\n\r\n    const { numberOfPeople } = props.orderInfor;\r\n    const listDishes = getDish();\r\n    const numberSelects = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container spacing={3} style={{ position: \"relative\" }}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n                        <InputLabel><span >Please Select A Dish</span></InputLabel>\r\n                        <Select\r\n                            name=\"dish\"\r\n                            onChange={(event) => handleChange(event, \"dish\")}\r\n                        >\r\n                            {displayItems(listDishes)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl style={{ margin: \"20px\" }} className=\"form-controll\">\r\n                        <InputLabel><span >Please Enter No. Of Servings</span></InputLabel>\r\n                        <Select\r\n                            name=\"count\"\r\n                            defaultValue={1}\r\n                            onChange={(event) => handleChange(event, \"count\")}\r\n                        >\r\n                            {displayItems(numberSelects)}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n\r\n                    <Button\r\n                        style={{ marginTop: \"0px\", marginLeft: \"0px\", position: \"absolute\", bottom: \"-10px\", left: \"2rem\" }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={addDishes}\r\n                    > Add\r\n                        </Button>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                    <Table\r\n                        className=\"crud-table\"\r\n                        style={{ margin: \"12px\" }}\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{ width: \"50%\" }}>Dishes </TableCell>\r\n                                <TableCell style={{ width: \"50%\" }}>Number Of Servings</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {dishes.map((row) => (\r\n                                <TableRow key={row.dish}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.dish}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.count}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Step3Form;","import React from 'react';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\r\nfunction ReviewForm(props) {\r\n    function displayDishes(dishes) {\r\n        return (\r\n            dishes.map((dish, key) => (\r\n                <TableRow key={key}>\r\n                    <TableCell>{dish.dish}</TableCell>\r\n                    <TableCell>{dish.count}</TableCell>\r\n                </TableRow>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const { orderInfor } = props;\r\n    return (\r\n        <div style={{ marginLeft: \"300px\" }}>\r\n            <p>Meal : {orderInfor.meal}</p>\r\n            <p>Number of People : {orderInfor.numberOfPeople}</p>\r\n            <p>Restaurant : {orderInfor.restaurant}</p>\r\n            <p>Dishes : </p>\r\n            <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", width: \"300px\", marginLeft: \"100px\" }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Dish</TableCell>\r\n                        <TableCell>Number</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {displayDishes(orderInfor.dishes)}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReviewForm;","\r\nimport React,{ useState} from 'react';\r\nimport './../App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { data } from \"../data/dishes\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Step1Form from './Step1';\r\nimport Step2Form from './Step2';\r\nimport Step3Form from './Step3';\r\nimport ReviewForm from './Review';\r\n\r\n\r\nfunction OrderForm(props) {\r\n    const [steps, setSteps] = useState(['Step 1', 'Step 2', 'Step 3', 'Review']);\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    // const [orderInfor, setOrderInfor] = useState({});\r\n    const [meal, setMeal] = useState('');\r\n    const [numberOfPeople, setNumberOfPeople] = useState(0);\r\n    const [restaurant, setRestaurant] = useState('');\r\n    const [dishes, setDishes] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    // state = {\r\n    //     steps: ['Step 1', 'Step 2', 'Step 3', 'Review'],\r\n    //     activeStep: 0,\r\n    //     orderInfor: {\r\n    //         meal: '',\r\n    //         numberOfPeople: 0,\r\n    //         restaurant: '',\r\n    //         dishes: []\r\n    //     }\r\n    // }\r\n    var orderInfor = {\r\n        meal,\r\n        numberOfPeople,\r\n        restaurant,\r\n        dishes\r\n    }\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return <Step1Form orderInfor={orderInfor} handleChange={handleChange} />;\r\n            case 1:\r\n                return <Step2Form orderInfor={orderInfor} handleChange={handleChange} />;\r\n            case 2:\r\n                return <Step3Form orderInfor={orderInfor} addDishes={addDishes} />;\r\n            case 3:\r\n                return <ReviewForm orderInfor={orderInfor} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    function handleChange(event) {\r\n        console.log(event.target.value);\r\n        var error = \"\";\r\n        if (event.target.name === \"meal\") {\r\n           setMeal( event.target.value);\r\n        }\r\n        if (event.target.name === \"numberOfPeople\") {\r\n            setNumberOfPeople( event.target.value);\r\n            // if(orderInfor.numberOfPeople < 1 ){\r\n            //     error = \"Number of People is invalid!\";\r\n            // }\r\n            // if(orderInfor.numberOfPeople > 10 ){\r\n            //     error = \"Number of People must less than 11!\";\r\n\r\n            // }\r\n\r\n        }\r\n        if (event.target.name === \"restaurant\") {\r\n            // orderInfor.restaurant = event.target.value;\r\n            setRestaurant( event.target.value )\r\n\r\n        }\r\n        setError(error);\r\n    }\r\n\r\n    function handleNext() {\r\n\r\n        if (activeStep < 4) {\r\n            if (checkData() === 1) {\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n            else if (checkData() === 0) {\r\n                alert('Fill all the field!');\r\n            }\r\n            else if (checkData() === 2) {\r\n                alert('Not enough dishes!');\r\n            }\r\n        }\r\n    };\r\n\r\n    function handleBack() {\r\n        if (activeStep >= 1) {\r\n            setActiveStep(activeStep - 1);\r\n        }\r\n    };\r\n\r\n    function checkData() {\r\n        var result = 1;\r\n        if (activeStep === 0) {\r\n            if (!numberOfPeople || !meal) {\r\n                result = 0;\r\n            }\r\n            else {\r\n                result = 1;\r\n            }\r\n        }\r\n        else if (activeStep === 1) {\r\n            if (!restaurant) {\r\n                result = 0;\r\n            }\r\n            else {\r\n                result = 1;\r\n            }\r\n        }\r\n        else if (activeStep === 2) {\r\n            if (!dishes) {\r\n                result = 0;\r\n            }\r\n            else {\r\n                var value = null\r\n                dishes.map(dish => {\r\n                    value = value + dish.count\r\n                })\r\n                if (value < numberOfPeople) {\r\n                    result = 2\r\n                }\r\n                else {\r\n                    result = 1;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function addDishes(newdishes) {\r\n        setDishes(newdishes);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" color=\"default\" className=\"appBar\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Fabi Test\r\n                </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className=\"layout\">\r\n                <Paper className=\"paper\">\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Order\r\n                </Typography>\r\n                    <Stepper activeStep={activeStep} className=\"stepper\">\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Thank you for your order.\r\n                        </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\r\n                                    send you an update when your order has shipped.\r\n                        </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                                <React.Fragment>\r\n                                    {getStepContent(activeStep)}\r\n                                    <div className=\"buttons\" >\r\n                                        {activeStep !== 0 && (\r\n                                            <Button onClick={handleBack} className=\"button\">\r\n                                                Back\r\n                                            </Button>\r\n                                        )}\r\n                                        <Button\r\n\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={handleNext}\r\n                                            className=\"button\"\r\n                                        >\r\n                                            {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                        </Button>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OrderForm;","import React from 'react';\nimport OrderForm from \"./components/OrderForm\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <OrderForm />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}